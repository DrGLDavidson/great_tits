geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Year",
y = "Latency")
ggplot(final_data_glm,
aes(x= year,
y= latency)) + # separated for each diet percentage
theme_classic()+ # theme
geom_jitter()+
scale_colour_manual(values = c("hotpink", "deepskyblue"))+
#geom_smooth(method = "lm", se = TRUE, fullrange = TRUE, colour= "#36454F")+ # colour of the lm
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE))+
lat_age_scatter <-  # naming it
ggplot(final_data_glm, # using the filter cricket data set
aes(x= ageFinal,
y= latency,#
colour=se))+
geom_jitter()+
scale_color_gradient(low = "#AF7AC5", high = "#E74C3C", name ="b")+ # manal colour change
geom_smooth (method = "lm", se = TRUE, fullrange = TRUE, colour="black")+# colour of the regression line
theme_classic()+
labs(x = "Age", # labs names
y = "Latency (seconds)")
age_Lat_scatter2 <- # scatter plot also the main plot
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= factor(sex))) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
labs(x = "Age",
y = "Latency")
change_marginal <-
final_data_glm %>%
ggplot(aes(
x=latency,
colour = factor(sex), # colour with the colour of the different diets
fill= factor(sex), #fill with the colour of the different diets
alpha = 0.1, # size
bandwidth = 175))+ # size
geom_density()+ # density plot
theme_void()+ # just the density plot no axis
coord_flip()+ # flipping the cords
theme(legend.position = "none")#
age_Lat_scatter2+change_marginal # order of the plots
age_Lat_scatter2 <- # scatter plot also the main plot
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= factor(sex))) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency")
age_Lat_scatter2+change_marginal # order of the plots
lat_age_scatter <-  # naming it
ggplot(final_data_glm, # using the filter cricket data set
aes(x= ageFinal,
y= latency,#
colour=se))+
geom_jitter()+
scale_color_gradient(low = "#AF7AC5", high = "#E74C3C", name ="b")+ # manal colour change
geom_smooth (method = "lm", se = TRUE, fullrange = TRUE, colour="black")+# colour of the regression line
theme_classic()+
labs(x = "Age", # labs names
y = "Latency (seconds)")
lat_age_scatter
ggplot(final_data_glm, # using the filter cricket data set
aes(x= ageFinal,
y= latency,#
colour=sex))+
geom_jitter()+
scale_color_gradient(low = "#AF7AC5", high = "#E74C3C", name ="b")+ # manal colour change
geom_smooth (method = "lm", se = TRUE, fullrange = TRUE, colour="black")+# colour of the regression line
theme_classic()+
labs(x = "Age", # labs names
y = "Latency (seconds)")
#plot ----
age_Lat_scatter2 <- # scatter plot also the main plot
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= factor(sex))) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency")
age_Lat_scatter2
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
#  geom_smooth(method="lm",    #add another layer of data representation.
#              se=TRUE,
#              aes(colour=sex))+
labs(x = "Age",
y = "Latency",)
age_Lat_scatter2 <- # scatter plot also the main plot
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency",)
age_Lat_scatter2
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=age))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=Agefinal))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=ageFinal))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
#  geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=ageFina))+
labs(x = "Age",
y = "Latency",)
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) +
scale_color_discrete(name = "sex")+# change legend title
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
#  geom_smooth(method = "lm", se=FALSE, fullrange =TRUE)+
geom_jitter()+
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Age",
y = "Latency",)
aes(x= year,
y= latency,
colour= sex)) + # separated for each diet percentage
aes(x= year,
y= latency,
colour= sex)) + # separated for each diet percentage
ggplot(final_data_glm,
aes(x= year,
y= latency,
colour= sex)) + # separated for each diet percentage
theme_classic()+ # theme
geom_jitter()+
scale_colour_manual(values = c("hotpink", "deepskyblue"))+
#geom_smooth(method = "lm", se = TRUE, fullrange = TRUE, colour= "#36454F")+ # colour of the lm
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Year",
y = "Latency")
ggplot(final_data_glm,
aes(x= ageFinal,
y= latency,
colour= sex)) + # separated for each diet percentage
theme_classic()+ # theme
geom_jitter()+
scale_colour_manual(values = c("hotpink", "deepskyblue"))+
#geom_smooth(method = "lm", se = TRUE, fullrange = TRUE, colour= "#36454F")+ # colour of the lm
geom_smooth(method="lm",    #add another layer of data representation.
se=TRUE,
aes(colour=sex))+
labs(x = "Year",
y = "Latency")
only_male <- final_data_glm %>%
filter(!(sex %in% c("F")))
male <-
ggplot(only_male,
aes(x= ageFinal,
y= latency,
fill= ageFinal)) +
geom_violin(aes(colour = ageFinal), position = position_dodge(0.9),alpha =0.3, size=1.5)+
geom_point(aes(colour=ageFinal),position = position_dodge(0.9))+
geom_jitter(aes(colour = ageFinal))+
geom_boxplot(width = 0.1, position = position_dodge(0.9))+
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
scale_fill_manual(values = c("skyblue", "skyblue"))+
scale_colour_manual(values = c("skyblue", "skyblue"))+
labs(x = "Age",
y = "Latency")
only_female <- final_data_glm %>%
filter(!(sex %in% c("M")))
female <-
ggplot(only_female,
aes(x= ageFinal,
y= latency,
fill= ageFinal)) +
geom_violin(aes(colour = ageFinal), position = position_dodge(0.9),alpha =0.3, size=1.5)+
geom_point(aes(colour=ageFinal),position = position_dodge(0.9))+
geom_jitter(aes(colour = ageFinal))+
geom_boxplot(width = 0.1, position = position_dodge(0.9))+
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
scale_fill_manual(values = c("hotpink", "hotpink"))+
scale_colour_manual(values = c("hotpink", "hotpink"))+
labs(x = "Age",
y = "Latency")
female+male
# test volin
only_male <- final_data_glm %>%
filter(!(sex %in% c("F")))
male <-
ggplot(only_male,
aes(x= ageFinal,
y= latency,
fill= ageFinal)) +
geom_violin(aes(colour = ageFinal), position = position_dodge(0.9),alpha =0.3, size=1.5)+
geom_point(aes(colour=ageFinal),position = position_dodge(0.9))+
geom_jitter(aes(colour = ageFinal))+
geom_boxplot(width = 0.1, position = position_dodge(0.9))+
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
scale_fill_manual(values = c("deepskyblue", "deepskyblue"))+
scale_colour_manual(values = c("deepskyblue", "deepskyblue"))+
labs(x = "Age",
y = "Latency")
only_female <- final_data_glm %>%
filter(!(sex %in% c("M")))
female <-
ggplot(only_female,
aes(x= ageFinal,
y= latency,
fill= ageFinal)) +
geom_violin(aes(colour = ageFinal), position = position_dodge(0.9),alpha =0.3, size=1.5)+
geom_point(aes(colour=ageFinal),position = position_dodge(0.9))+
geom_jitter(aes(colour = ageFinal))+
geom_boxplot(width = 0.1, position = position_dodge(0.9))+
theme_classic()+ # theme
theme(legend.position = "top")+# removes the fig legend
scale_fill_manual(values = c("hotpink", "hotpink"))+
scale_colour_manual(values = c("hotpink", "hotpink"))+
labs(x = "Age",
y = "Latency")
female+male
model3b<-lmer(number_fledged ~ sex*latency + ageFinal + Count_may +(1|nestbox)+ (1 | RFID), data = final_data_glm)
summary(model3b)
drop1(model3b, test = "F")
# ageFinal*latency removed
# ageFinal*latency removed
summary_table_sex*lat <-
model4 %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
summary_table_sex*lat <-
model3b %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
summary_table_sex*lat
summary_table_sex*lat <-
model3b %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
summary_table_sexlat <-
model3b %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
summary_table_sexlat
model3<-lmer(number_fledged ~ sex*latency + ageFinal*latency + Count_may + Year+(1|nestbox)+ (1 | RFID), data = final_data_glm)
# 📦PACKAGES ----
library(lme4)
library(lmerTest)
library(rptR)
library(Matrix)
library(tidyverse) # a range of helpful packages
library(janitor)# helps to format the data
library(kableExtra)
library(performance)# needed to instal for the stats graphs (posterior check)
library(ggExtra)
library(broom.mixed) # broom tables
library(patchwork)
library(GGally)
library(gt)
#_________________-----
# LOADING IN DATA
setwd("~/GitHub/great_tits/data") # setting the path
tsm<- read.csv(file= "final_data_edit.csv", header=TRUE) # inserting the new data
final_data_glm<-tsm %>%
select(RFID, Count_may, Date, Hmsec, CounterID, nestbox, year, latency, repeat_birds, sex, Age2019BreedingSeason, Age2020BreedingSeason, Age2021BreedingSeason, ageFinal, number_fledged, site_box_number)
names(final_data_glm) # flituring the data
model3<-lmer(number_fledged ~ sex*latency + ageFinal*latency + Count_may + year+(1|nestbox)+ (1 | RFID), data = final_data_glm)
summary(model3)
model3<-lmer(number_fledged ~ sex*latency + ageFinal*latency + Count_may + year+ year*Count_may(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
model3<-lmer(number_fledged ~ sex*latency + ageFinal*latency + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model3)
model3b<-lmer(number_fledged ~ sex*latency + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model3b)
model4<-lmer(number_fledged ~ sex+latency + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
model4
(model4)
model4<-lmer(number_fledged ~ sex+latency + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model4)
performance::check_model(model4)
performance::check_model(model4)
performance::check_model(model4)
summary(model4)
model4<-lmer(number_fledged ~ sex+latency + ageFinal + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model4)
performance::check_model(model4)
summary(model4)
model5<-lmer(number_fledged ~latency + ageFinal + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model5)
model6<-lmer(number_fledged ~latency+ Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model6)
summary(model6)
model7<-lmer(number_fledged ~ Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model7)
model7<-lmer(number_fledged ~ Count_may + year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model7)
model7<-lmer(number_fledged ~ Count_may + year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model7)
model7<-lmer(number_fledged ~year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model7)
model4<-lmer(number_fledged ~ sex+latency + ageFinal + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model4)
performance::check_model(model4)
#summary_table5 <-
model4 %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
model3b<-lmer(number_fledged ~ sex*latency + Count_may + year+ year*Count_may+(1|nestbox)+ (1 | RFID), data = final_data_glm) # added year
summary(model3b)
drop1(model3b, test = "F")
lsmodel2.33<-lmer(latency ~  sex+ageFinal+ year:sex+(1|nestbox)+ (1 | RFID), data = final_data_glm)# removed may
summary(lsmodel2.33)
summary_table2.33
summary_table2.33 <-
lsmodel2.33 %>%
broom::tidy(conf.int = TRUE) %>%
mutate(p.value = scales::pvalue(p.value)) %>% # changes the pvalues <0.001
rename("Term"="term",
"Coefficient" = "estimate", # changing the names to be better
"Standard Error" = "std.error",
"t" = "statistic",
"p value" = "p.value",
"lower.CI" = "conf.low",
"upper.CI" = "conf.high")%>%
mutate(across(c(Coefficient: t), round,5)) %>%
kbl() %>%
kable_styling(latex_options = "hold_position") %>% # to stop the table moving in markdown!!!!
#  row_spec(c(3,5,7), color = 'white', background = 'purple') %>% # the most sig highlighted in colour
row_spec(c(5), color = 'white', background = 'deepskyblue') %>% # the most sig highlighted in colour
row_spec(c(0), italic = TRUE, align = "c") %>% # titles italic
kable_styling() # fancy style
summary_table2.33
